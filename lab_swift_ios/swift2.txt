import Foundation

func citeste(a: inout Float, b: inout Float, c: inout Float)
{
let s_opt = readLine()

    if let s_a = s_opt{
        let a_opt = Float(s_a)
        if let a_local = a_opt{
          
            let s_opt = readLine()
            if let s_b = s_opt{
                let b_opt = Float(s_b)
                if let b_local = b_opt{
                 
                    let s_opt = readLine()
                    if let s_c = s_opt{
                        let c_opt = Float(s_c)
                        if let c_local = c_opt{
                            a = a_local
                            b = b_local
                            c = c_local
                    
                        }
                    }
                }
            }
        }
    }
}

func calculeaza(a: Float, b: Float, c: Float, x1_re: inout Float, x1_im: inout Float, x2_re: inout Float, x2_im: inout Float)
{                  let delta = b * b - 4 * a * c
               
                if (delta >= 0){
                    x1_re = ( -b - sqrt(delta) ) / (2 * a)
                    x1_im = 0
                    x2_re = (-b - sqrt(delta) ) / (2 * a)
                    x2_im = 0
                }
                else{
                    x1_re = (-b) / (2 * a)
                    x1_im = -sqrt(-delta) / (2 * a)
                    x2_re = (-b) / (2 * a)
                    x2_im = sqrt(-delta) / (2 * a)
                }
}

func afiseaza(x1_re: Float, x1_im: Float, x2_re: Float, x2_im: Float)
        {        print( "x1 = \(x1_re) + \(x1_im)")
                 print( "x2 = \(x2_re) + \(x2_im)")
            
        }

var a, b, c: Float
a = 0
b = 0
c = 0
var x1_re, x1_im, x2_re, x2_im: Float
x1_re = 0
x1_im = 0
x2_re = 0
x2_im = 0
//nume: valoare
citeste(a: &a, b:  &b, c:  &c)
calculeaza(a: a, b: b, c: c, x1_re: &x1_re, x1_im: &x1_im, x2_re: &x2_re, x2_im: &x2_im)
afiseaza(x1_re: x1_re, x1_im: x1_im, x2_re: x2_re, x2_im: x2_im)


